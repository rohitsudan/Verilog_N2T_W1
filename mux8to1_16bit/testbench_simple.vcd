$date
	Mon Sep 19 00:23:39 2016
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module testbench_simple $end
$var wire 16 ! out [15:0] $end
$var reg 16 " in0 [15:0] $end
$var reg 16 # in1 [15:0] $end
$var reg 16 $ in2 [15:0] $end
$var reg 16 % in3 [15:0] $end
$var reg 16 & in4 [15:0] $end
$var reg 16 ' in5 [15:0] $end
$var reg 16 ( in6 [15:0] $end
$var reg 16 ) in7 [15:0] $end
$var reg 3 * sel [2:0] $end
$scope module mymux $end
$var wire 16 + in0 [15:0] $end
$var wire 16 , in1 [15:0] $end
$var wire 16 - in2 [15:0] $end
$var wire 16 . in3 [15:0] $end
$var wire 16 / in4 [15:0] $end
$var wire 16 0 in5 [15:0] $end
$var wire 16 1 in6 [15:0] $end
$var wire 16 2 in7 [15:0] $end
$var wire 3 3 sel [2:0] $end
$var reg 16 4 out [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111111111111111 4
b0 3
b1100000111111111 2
b100000111110111 1
b111110111 0
b1000111111111 /
b111111111 .
b1111111000000000 -
b0 ,
b1111111111111111 +
b0 *
b1100000111111111 )
b100000111110111 (
b111110111 '
b1000111111111 &
b111111111 %
b1111111000000000 $
b0 #
b1111111111111111 "
b1111111111111111 !
$end
#100
b0 !
b0 4
b1 *
b1 3
#200
b1111111000000000 !
b1111111000000000 4
b10 *
b10 3
#300
b111111111 !
b111111111 4
b11 *
b11 3
#400
b1000111111111 !
b1000111111111 4
b100 *
b100 3
#500
b111110111 !
b111110111 4
b101 *
b101 3
#600
b100000111110111 !
b100000111110111 4
b110 *
b110 3
#700
b1100000111111111 !
b1100000111111111 4
b111 *
b111 3
#800
